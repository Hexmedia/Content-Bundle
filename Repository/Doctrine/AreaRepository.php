<?php

namespace Hexmedia\ContentBundle\Repository\Doctrine;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;
use Hexmedia\ContentBundle\Repository\AreaRepositoryInterface;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AreaRepository extends EntityRepository implements AreaRepositoryInterface
{
    public function getPage($page = 1, $sort = 'id', $pageSize = 10, $sortDirection = 'ASC', $fields = array())
    {
        $queryBuilder = $this->createQueryBuilder('a')
            ->setMaxResults($pageSize)
            ->setFirstResult(max(0, $page - 1) * $pageSize)
            ->orderBy('a.' . $sort, $sortDirection == 'ASC' ? 'ASC' : 'DESC');

        return $queryBuilder->getQuery()->getResult();
    }

    public function getCount()
    {
        $queryBuilder = $this->createQueryBuilder("a")
            ->select("count(a.id)");

        return $queryBuilder->getQuery()->getSingleScalarResult();
    }

    /**
     * @param $name
     * @param $locale
     * @return mixed
     */
    public function getByNameAndPath($name, $path)
    {
        $queryBuilder = $this->createQueryBuilder("a");

        $queryBuilder
            ->where(
                $queryBuilder->expr()->andX(
                    $queryBuilder->expr()->eq('a.name', '?1'),
                    $queryBuilder->expr()->eq('a.path', '?2')
                )
            )
            ->setParameter('1', $name)
            ->setParameter('2', $path);

        try {
            return $queryBuilder->getQuery()->getSingleResult();
        } catch (NoResultException $e) {
            return null;
        }
    }

    function getGlobalByName($name)
    {
        // TODO: Implement getGlobalByName() method.
    }
}
